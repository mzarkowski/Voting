{
   "AWSTemplateFormatVersion":"2010-09-09",
   "Description":"AWS CloudFormation Sample Template",
   "Parameters":{
      "InstanceType":{
         "Description":"EC2 instance type",
         "Type":"String",
         "Default":"t2.nano",
         "AllowedValues":[
            "t2.micro",
            "t2.nano"
         ],
         "ConstraintDescription":"must be a valid EC2 instance type."
      },
      "InstanceAMI":{
         "Description":"Latest ubuntu 16.04 image (https://cloud-images.ubuntu.com/locator/ec2/). Default is for Oregon.",
         "Type":"String",
         "AllowedPattern":"ami-[a-zA-Z0-9]{8}",
         "Default":"ami-7c803d1c"
      }
   },
   "Resources":{
      "EC2Instance":{
         "Type":"AWS::EC2::Instance",
         "Properties":{
            "InstanceType":{
               "Ref":"InstanceType"
            },
            "SecurityGroups":[
               {
                  "Ref":"WebappSecurityGroup"
               }
            ],
            "ImageId":{
               "Ref":"InstanceAMI"
            },
            "UserData":{
               "Fn::Base64":{
                  "Fn::Join":[
                     "",
                     [
                        "#!/bin/bash -v\n",
                        "apt-get update\n",
                        "apt-get install python-pip -y\n",
                        "pip install docker-compose\n",
                        "wget -qO- https://get.docker.com/ | sh\n",
                        "sudo usermod -aG docker $(whoami)\n",
                        "git clone https://github.com/mzarkowski/Voting\n",
                        "cd Voting; docker-compose up\n"
                     ]
                  ]
               }
            }
         }
      },
      "WebappSecurityGroup":{
         "Type":"AWS::EC2::SecurityGroup",
         "Properties":{
            "GroupDescription":"Enable HTTP for everyone",
            "SecurityGroupIngress":[
               {
                  "IpProtocol":"tcp",
                  "FromPort":"80",
                  "ToPort":"80",
                  "CidrIp":"0.0.0.0/0"
               }
            ]
         }
      }
   },
   "Outputs":{
      "PublicDNS":{
         "Description":"Public DNSName of the newly created EC2 instance",
         "Value":{
            "Fn::GetAtt":[
               "EC2Instance",
               "PublicDnsName"
            ]
         }
      }
   }
}